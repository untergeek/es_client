[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "es_client"
dynamic = ["version"]
description = "Elasticsearch Client builder, complete with schema validation"
authors = [{name = "Aaron Mildenstein", email = "aaron@mildensteins.com"}]
readme = "README.rst"
requires-python = ">=3.8"
license = { text="Apache-2.0" }
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = [
    "elasticsearch",
    "client",
    "connect",
    "command-line"
]
dependencies = [
    "elasticsearch8==8.13.0",
    "ecs-logging==2.1.0",
    "dotmap==1.3.30",
    "click==8.1.7",
    "pyyaml==6.0.1",
    "voluptuous>=0.14.2",
    "certifi>=2024.2.2",
    "six==1.16.0",
]

[project.optional-dependencies]
test = [
    "requests",
    "pytest >=7.2.1",
    "pytest-cov",
]
doc = ["sphinx", "sphinx_rtd_theme"]

[project.urls]
"Homepage" = "https://github.com/untergeek/es_client"
"Bug Tracker" = "https://github.com/untergeek/es_client/issues"
"Documentation" = "https://es-client.readthedocs.io/"
"Source Code" = "http://github.com/untergeek/es_client"
"Release Notes" = "https://github.com/untergeek/es_client/releases"

[tool.hatch.version]
path = "src/es_client/__init__.py"

[tool.hatch.build.targets.sdist]
exclude = [
    "dist",
    "docs",
    "docker_test",
    "examples",
    "html_docs",
    "tests",
    "cli.py",
    "example.yml",
    "pytest.ini",
    "src/local_test.py",
]

[tool.pytest.ini_options]
pythonpath = [".", "src/es_client"]
minversion = "7.2"
addopts = "-ra -q"
testpaths = [
    "tests/unit",
    "tests/integration",
]

# Lint environment
[tool.hatch.envs.lint.scripts]
run-pyright = "pyright {args:.}"
run-black = "black --quiet --check --diff {args:.}"
run-ruff = "ruff check --quiet {args:.}"
run-curlylint = "curlylint {args:.}"
python = ["run-pyright", "run-black", "run-ruff"]
templates = ["run-curlylint"]
all = ["python", "templates"]

# Test environment
[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.test]
dependencies = [
    "requests",
    "pytest >=7.2.1",
    "pytest-cov"
]

[tool.hatch.envs.test.scripts]
test = "pytest"
test-cov = "pytest --cov=es_client"
cov-report = "pytest --cov=es_client --cov-report html:cov_html"
